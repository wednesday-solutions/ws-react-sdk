{"version":3,"file":"utils.js","sources":["../../src/images/ic-error.svg","../../src/services/cognito.js","../../src/images/ic-success.svg","../../src/images/ic-warning.svg","../../src/utils/validationUtils.js","../../src/utils/loadable.js","../../src/utils/canvasUtils.js","../../src/utils/index.js"],"sourcesContent":["var img = \"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3e %3cg%3e %3cpath fill='%23af0974' d='M10 0A10 10 0 1 1 0 10 10 10 0 0 1 10 0z' transform='translate(-156 -79) translate(156 79)'/%3e %3cpath fill='white' d='M13 5.806L12.194 5 9 8.194 5.806 5 5 5.806 8.194 9 5 12.194l.806.806L9 9.806 12.194 13l.806-.806L9.806 9z' transform='translate(-156 -79) translate(157 80)'/%3e %3c/g%3e%3c/svg%3e\";\n  export default img;","import { CognitoUserPool, AuthenticationDetails, CognitoUser, CognitoUserAttribute } from 'amazon-cognito-identity-js';\nimport { promisify } from '@utils';\n\nexport async function getUserAttributes() {\n  const cognitoUser = getUserPool().getCurrentUser();\n  return new Promise((resolve, reject) => {\n    cognitoUser.getSession((err, data) => {\n      if (err) {\n        return reject(err);\n      }\n      cognitoUser.getUserAttributes((err, data) => {\n        if (err) {\n          return reject(err);\n        }\n        resolve(data);\n      });\n    });\n  });\n}\n\n// signUp the user\nexport function signUp(email, password, fullName, phone, isBusiness = false, owner) {\n  return new Promise((resolve, reject) => {\n    const dataEmail = {\n      Name: 'email',\n      Value: email\n    };\n    const attributeEmail = new CognitoUserAttribute(dataEmail);\n\n    const dataGroup = {\n      Name: 'custom:group',\n      Value: owner ? 'group-owner' : 'group-vet'\n    };\n    const attributeGroup = new CognitoUserAttribute(dataGroup);\n\n    const attributeList = [];\n    attributeList.push(attributeEmail);\n    attributeList.push(attributeGroup);\n    attributeList.push(\n      new CognitoUserAttribute({\n        Name: 'custom:business',\n        Value: isBusiness.toString()\n      })\n    );\n    attributeList.push(\n      new CognitoUserAttribute({\n        Name: 'given_name',\n        Value: fullName\n      })\n    );\n    attributeList.push(\n      new CognitoUserAttribute({\n        Name: 'phone_number',\n        Value: phone\n      })\n    );\n\n    getUserPool().signUp(email, password, attributeList, null, function(err, result) {\n      if (err) {\n        reject(err);\n      }\n      resolve(result);\n    });\n  });\n}\n\n// confirmSignUp takes confirmation code and confirms the user\nexport function confirmSignUp(email, code) {\n  return new Promise((resolve, reject) => {\n    const pool = getUserPool();\n    const userData = {\n      Username: email,\n      Pool: pool\n    };\n    const curUser = new CognitoUser(userData);\n    if (curUser === null) {\n      const error = new Error({\n        code: 'NotAuthorizedException',\n        message: 'No user data is present',\n        name: 'NotAuthorizedException'\n      });\n      reject(error);\n    }\n    curUser.confirmRegistration(code, true, function(err, result) {\n      if (err) {\n        reject(err);\n      }\n      resolve(result);\n    });\n  });\n}\n\nexport function resendConfirmationCode(email) {\n  return new Promise((resolve, reject) => {\n    const pool = getUserPool();\n    const userData = {\n      Username: email,\n      Pool: pool\n    };\n    const curUser = new CognitoUser(userData);\n    if (curUser === null) {\n      const error = new Error({\n        code: 'NotAuthorizedException',\n        message: 'No user data is present',\n        name: 'NotAuthorizedException'\n      });\n      reject(error);\n    }\n\n    curUser.resendConfirmationCode(function(err, result) {\n      if (err) {\n        reject(err);\n      }\n      resolve(result);\n    });\n  });\n}\n\n// login the user\nexport function login(email, password) {\n  return new Promise((resolve, reject) => {\n    const authenticationData = {\n      Username: email,\n      Password: password\n    };\n    const authenticationDetails = new AuthenticationDetails(authenticationData);\n\n    const userData = {\n      Username: email,\n      Pool: getUserPool()\n    };\n    const cognitoUser = new CognitoUser(userData);\n\n    cognitoUser.authenticateUser(authenticationDetails, {\n      onSuccess: function(result) {\n        const accessToken = result.getAccessToken().getJwtToken();\n        const refreshToken = result.getRefreshToken().token;\n        const idToken = result.idToken.jwtToken;\n        resolve({\n          payload: {\n            accessToken,\n            refreshToken,\n            idToken\n          }\n        });\n      },\n\n      onFailure: function(err) {\n        reject(err);\n      }\n    });\n  });\n}\n\n// fetchAttributes establishes a session and gets the user Attributes.\nexport async function fetchAttributes() {\n  const curUser = getUserPool().getCurrentUser();\n\n  // fetchAttributes is called before login or signup\n  if (curUser === null) {\n    throw new Error({\n      code: 'NotAuthorizedException',\n      message: 'No user is logged in',\n      name: 'NotAuthorizedException'\n    });\n  }\n\n  // establish the session\n  await promisify((resolve, reject) => {\n    curUser.getSession(function(err, session) {\n      if (err) {\n        return reject(err);\n      } else if (!session.isValid()) {\n        const error = new Error('Session not Valid');\n        return reject(error);\n      }\n      resolve();\n    });\n  });\n\n  return promisify((resolve, reject) => {\n    // get stored user data\n    curUser.getUserAttributes(function(err, result) {\n      if (err) {\n        reject(err);\n      }\n      const attr = {};\n      for (let i = 0; i < result.length; i++) {\n        attr[result[i].getName()] = result[i].getValue();\n      }\n      resolve(attr);\n    });\n  });\n}\n\n// sign out the user and remove it from the userPool\nexport function signOut() {\n  return new Promise((resolve, reject) => {\n    const curUser = getUserPool().getCurrentUser();\n    if (curUser === null) {\n      resolve('No user was signed in');\n    }\n\n    const username = curUser.getUsername();\n    curUser.signOut();\n    resolve(`User: ${username} has been signed out`);\n  });\n}\n\n// forgotPass takes user's email to create cognitoUser and getCodeAndPass callback to get verificationCode and newPassword. getCodeAndPass should return an object with verificationCode and newPassword.\nexport function forgotPass(email) {\n  return new Promise((resolve, reject) => {\n    const userData = {\n      Username: email,\n      Pool: getUserPool()\n    };\n    const cognitoUser = new CognitoUser(userData);\n\n    cognitoUser.forgotPassword({\n      onSuccess: function(result) {\n        resolve(result);\n      },\n      onFailure: function(err) {\n        reject(err);\n      }\n    });\n  });\n}\n\nexport function confirmPassword(username, verificationCode, newPassword) {\n  const cognitoUser = new CognitoUser({\n    Username: username,\n    Pool: getUserPool()\n  });\n\n  return new Promise((resolve, reject) => {\n    cognitoUser.confirmPassword(verificationCode, newPassword, {\n      onSuccess: function(result) {\n        resolve(result);\n      },\n      onFailure: function(err) {\n        reject(err);\n      }\n    });\n  });\n}\n\nexport async function updatePhoneNumberRequest(username, newPhoneNumber) {\n  return new Promise((resolve, reject) => {\n    getCognitoUser().then(user =>\n      user.updateAttributes([{ Name: 'phone_number', Value: newPhoneNumber }], (err, data) => {\n        if (!err) {\n          user.getAttributeVerificationCode('phone_number', {\n            onSuccess: () => {},\n            onFailure: err => {\n              reject(err);\n            },\n            inputVerificationCode: data => {\n              resolve(data);\n            }\n          });\n        }\n      })\n    );\n  });\n}\n\nexport function verifyPhoneNumberRequest(username, verificationCode) {\n  return new Promise((resolve, reject) => {\n    getCognitoUser().then(user =>\n      user.verifyAttribute('phone_number', verificationCode, {\n        onSuccess: data => resolve(data),\n        onFailure: err => reject(err)\n      })\n    );\n  });\n}\n\nlet userPool;\nexport function getUserPool() {\n  if (!userPool) {\n    const poolData = {\n      UserPoolId: process.env.AWS_COGNITO_USER_POOL_ID,\n      ClientId: process.env.AWS_COGNITO_USER_POOL_APP_CLIENT\n    };\n    userPool = new CognitoUserPool(poolData);\n  }\n  return userPool;\n}\n\nexport function getUserPoolID() {\n  return process.env.AWS_COGNITO_USER_POOL_ID;\n}\n\nexport function getUserPoolAppClient() {\n  return process.env.AWS_COGNITO_USER_POOL_APP_CLIENT;\n}\n\nexport const COGNITO_ERROR_TYPES = {\n  USER_NOT_CONFIRMED_EXCEPTION: 'UserNotConfirmedException',\n  NOT_AUTHORIZED: 'NotAuthorizedException',\n  INVALID_PARAMETER_EXCEPTION: 'InvalidParameterException',\n  CODE_MISMATCH_EXCEPTION: 'CodeMismatchException',\n  USER_NOT_FOUND_EXCEPTION: 'UserNotFoundException'\n};\n\nexport const getCognitoUser = () => {\n  const cognitoUser = getUserPool().getCurrentUser();\n  return new Promise((resolve, reject) => {\n    cognitoUser.getSession((err, data) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(cognitoUser);\n    });\n  });\n};\nexport default {\n  COGNITO_ERROR_TYPES,\n  getUserPoolAppClient,\n  getUserPoolID,\n  getUserPool,\n  confirmPassword,\n  forgotPass,\n  getUserAttributes,\n  signOut,\n  fetchAttributes,\n  login,\n  resendConfirmationCode,\n  confirmSignUp,\n  signUp,\n  verifyPhoneNumberRequest,\n  updatePhoneNumberRequest\n};\n","var img = \"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20'%3e %3cg%3e %3cpath fill='%232fbb8a' d='M10 0A10 10 0 1 1 0 10 10 10 0 0 1 10 0z' transform='translate(-156 -79) translate(156 79)'/%3e %3cpath fill='white' d='M6.582 11.623L4.2 9.236l-.8.8 3.182 3.182L13.4 6.4l-.8-.8z' transform='translate(-156 -79) translate(158 80)'/%3e %3c/g%3e%3c/svg%3e\";\n  export default img;","var img = \"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='22' height='20' viewBox='0 0 22 20'%3e %3cg%3e %3cpath fill='%23ffbc41' d='M9.248 3.186a2 2 0 0 1 3.5 0l7.617 13.85A2 2 0 0 1 18.617 20H3.383a2 2 0 0 1-1.753-2.964z' transform='translate(-154 -78) translate(154 78)'/%3e %3cpath fill='white' d='M.846 1.541h1.417l.192-5.8H.642zm1.766 1.825a.983.983 0 0 0-1.021-.985.986.986 0 1 0 0 1.97.983.983 0 0 0 1.021-.985z' transform='translate(-154 -78) translate(163.648 90.371)'/%3e %3c/g%3e%3c/svg%3e\";\n  export default img;","import React from 'react';\nimport parsePhoneNumberFromString from 'libphonenumber-js';\n\nimport { FormattedMessage } from 'react-intl';\n\nconst FULLNAME_VALIDATION_RULE = /^[a-z\\s]+$/i;\nconst ADDRESS_VALIDATION_RULE = /^[a-zA-Z0-9\\s,.'-]{3,}$/;\nconst LICENSE_NUMBER_VALIDATION_RULE = /^[a-zA-Z0-9]*$/;\nconst NUMBER_VALIDATION_RULE = /^[0-9]*$/;\nconst YEARS_OF_EXPERIENCE_RULE = /^[0-9]{2}$/;\nconst PASSWORD_VALIDATION_RULE = /^(?=.*[\\d])(?=.*[!$#])((?=.*[A-Z]))[a-zA-Z0-9!@#$%^&*]{8,}$/;\nconst OTP_RULE = /^[0-9]{6}$/;\nconst MOBILE_RULE = /^[0-9]{5,13}$/;\nconst COUNTRY_CODE_RULE = /^\\+?\\d+$/;\n\nconst createRule = (ruleName, ruleValue, message) => ({\n  [ruleName]: ruleValue,\n  message: message.trim().length > 0 ? <FormattedMessage id={message} /> : 'Invalid Input Value'\n});\n\nconst required = message => createRule('required', true, message);\nconst pattern = (pattern, message) => createRule('pattern', pattern, message);\nconst validator = (validationHandler, message) => createRule('validator', validationHandler, message);\nexport const isValidNumber = (value, code) => {\n  try {\n    const number = parsePhoneNumberFromString(`+${code + value.replace('-', '')}`);\n\n    return number.isValid();\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const getCountryCodeAndStrippedNumber = phoneNumber => {\n  let countryCode = '';\n  let strippedNumber = '';\n  try {\n    const number = parsePhoneNumberFromString(phoneNumber);\n    countryCode = number.countryCallingCode;\n    strippedNumber = number.nationalNumber;\n  } catch (err) {}\n  return { countryCode, strippedNumber };\n};\nexport const isValidNumberWithCountry = (countryCode, phoneNumber) => {\n  try {\n    if (phoneNumber?.length && phoneNumber[0] === '0') {\n      return false;\n    }\n    const number = parsePhoneNumberFromString(countryCode + phoneNumber);\n    return number.isValid();\n  } catch (e) {\n    return false;\n  }\n};\nexport const handlePhoneNumberValidation = (rule, value, callback, countryCode) => {\n  if (value && !isValidNumber(value, countryCode)) {\n    callback(new Error('Invalid error'));\n  }\n  callback();\n};\nexport const handlePhoneNumberValidationWithCountry = (rule, value, callback) => {\n  if (value && !isValidNumberWithCountry(value)) {\n    callback(new Error('Invalid error'));\n  }\n  callback();\n};\n\nexport const isAddressValid = (requiredMsgId, invalidMsgId) => [\n  required(requiredMsgId),\n  pattern(ADDRESS_VALIDATION_RULE, invalidMsgId)\n];\nexport const isLicenseNumberValid = (requiredMsgId, invalidMsgId) => [\n  required(requiredMsgId),\n  pattern(LICENSE_NUMBER_VALIDATION_RULE, invalidMsgId)\n];\nexport const isNumberValid = (requiredMsgId, invalidMsgId) => [\n  required(requiredMsgId),\n  pattern(NUMBER_VALIDATION_RULE, invalidMsgId)\n];\nexport const isYearsOfExpValid = (requiredMsgId, invalidMsgId) => [pattern(YEARS_OF_EXPERIENCE_RULE, invalidMsgId)];\nexport const isMobileValidWithCountry = (requiredMsgId, invalidMobileMsgId) => [\n  required(requiredMsgId),\n  validator((rule, value, callback) => {\n    handlePhoneNumberValidationWithCountry(rule, value, callback);\n  }, invalidMobileMsgId)\n];\n\nexport const type = (type, message) => createRule('type', type, message);\n\nexport const isEmailValid = (requiredMsgId, invalidEmailMsgId) => [\n  required(requiredMsgId),\n  type('email', invalidEmailMsgId)\n];\n\nexport const isPasswordValid = (requiredMsgId, invalidPasswordMsgId) => [\n  required(requiredMsgId),\n  pattern(PASSWORD_VALIDATION_RULE, invalidPasswordMsgId)\n];\n\nexport const isRequired = requiredMsgId => [required(requiredMsgId)];\n\nexport const isFullNameValid = (requiredMsgId, invalidFullNameMsgId) => [\n  required(requiredMsgId),\n  pattern(FULLNAME_VALIDATION_RULE, invalidFullNameMsgId)\n];\n\nexport const isOTPValid = (rquiredMsg, invalidMsg) => [required(rquiredMsg), pattern(OTP_RULE, invalidMsg)];\n\nexport const isMobileValid = (requiredMsgId, invalidMobileMsgId) => [\n  required(requiredMsgId),\n  pattern(MOBILE_RULE, invalidMobileMsgId)\n];\n\nexport const isCountryCodeValid = (requiredMsgId, invalidCountryCodeMsgId) => [\n  required(requiredMsgId),\n  pattern(COUNTRY_CODE_RULE, invalidCountryCodeMsgId)\n];\n\n// while using this validation make sure that your password field has a name of 'password'\nexport const doPasswordsMatch = (getFieldValue, requiredMsgId, invalidPasswordMsgId) => [\n  required(requiredMsgId),\n  validator((_rule, value, callback) => {\n    if (!value || getFieldValue('password') === value) {\n      callback();\n    }\n    callback(new Error('Password does not match'));\n  }, invalidPasswordMsgId)\n];\n\nexport const getValidCountryCode = countryCode => {\n  let cc = countryCode;\n  if (countryCode && countryCode[0] !== '+') {\n    cc = '+' + countryCode;\n  }\n  return cc;\n};\nexport const getValidPhoneNumber = (countryCode, mobile) => {\n  let p = mobile;\n  if (mobile && mobile[0] === '0') {\n    p = mobile.substr(1, mobile.length);\n  }\n  return getValidCountryCode(countryCode) + p;\n};\n","import React, { lazy, Suspense } from 'react';\n\nconst loadable = (importFunc, { fallback = null } = { fallback: null }) => {\n  const LazyComponent = lazy(importFunc);\n\n  return props => (\n    <Suspense fallback={fallback}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\nexport default loadable;\n","const createImage = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener('load', () => resolve(image));\n    image.addEventListener('error', error => reject(error));\n    image.setAttribute('crossOrigin', 'anonymous'); // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url;\n  });\n\nfunction getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\nexport async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  const maxSize = Math.max(image.width, image.height);\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n\n  // set each dimensions to double largest dimension to allow for a safe area for the\n  // image to rotate in without being clipped by canvas context\n  canvas.width = safeArea;\n  canvas.height = safeArea;\n\n  // translate canvas context to a central location on image to allow rotating around the center.\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  // draw rotated image and store data.\n  ctx.drawImage(image, safeArea / 2 - image.width * 0.5, safeArea / 2 - image.height * 0.5);\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  // paste generated rotate image with correct offsets for x,y crop values.\n  ctx.putImageData(\n    data,\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\n  );\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise(resolve => {\n    canvas.toBlob(file => {\n      resolve(URL.createObjectURL(file));\n    }, 'image/jpeg');\n  });\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { message as notification, Select } from 'antd';\nimport icError from '@images/ic-error.svg';\nimport icSuccess from '@images/ic-success.svg';\nimport icWarning from '@images/ic-warning.svg';\nimport { getCountryCodeAndStrippedNumber } from '@utils/validationUtils';\nimport loadable from './loadable';\n\nconst { Option } = Select;\n\nexport const NOTIFICATION_TYPE = {\n  SUCCESS: 1,\n  ERROR: 2,\n  WARNING: 3,\n  INFO: 4\n};\nconst StyledToastIcon = styled.img`\n  margin-right: 10px;\n`;\n\nexport const showNotification = (message, type = NOTIFICATION_TYPE.INFO) => {\n  if (!message) {\n    return;\n  }\n  let notificationMethod;\n  let icon;\n  switch (type) {\n    case NOTIFICATION_TYPE.SUCCESS:\n      notificationMethod = notification.success;\n      icon = icSuccess;\n      break;\n    case NOTIFICATION_TYPE.ERROR:\n      notificationMethod = notification.error;\n      icon = icError;\n      break;\n    case NOTIFICATION_TYPE.WARNING:\n      notificationMethod = notification.warning;\n      icon = icWarning;\n      break;\n    default:\n      notificationMethod = notification.info;\n      icon = icWarning;\n  }\n  notificationMethod({\n    content: message,\n    icon: <StyledToastIcon src={icon} />\n  });\n};\n\nexport const getCognitoFormFields = props => {\n  const formFields = [\n    {\n      name: 'email',\n      value: props?.location?.state?.vetData?.email\n    }\n  ];\n\n  // eslint-disable-next-line no-unused-expressions\n  props?.location?.state?.userAttributes?.forEach(attr => {\n    if (attr.Name === 'given_name') {\n      formFields.push({\n        name: 'fullName',\n        value: attr.Value\n      });\n      formFields.push({\n        name: 'businessName',\n        value: attr.Value\n      });\n    } else if (attr.Name === 'phone_number') {\n      const { countryCode, strippedNumber } = getCountryCodeAndStrippedNumber(attr.Value);\n      formFields.push({\n        name: 'phone',\n        value: strippedNumber\n      });\n      formFields.push({\n        name: 'countryCode',\n        value: countryCode\n      });\n    }\n  });\n  return formFields;\n};\n\nexport const promisify = callback => {\n  return new Promise((resolve, reject) => callback(resolve, reject));\n};\nexport * from './validationUtils';\nexport * from '../services/cognito';\nexport * from './canvasUtils';\nexport { loadable };\n\nexport function convertGqlResponse(res) {\n  return (res?.edges || []).map(a => a?.node).filter(a => !!a);\n}\n\nexport function renderSelectOptions(options = []) {\n  return options.map(function(ele, i) {\n    return (\n      <Option key={i} value={ele}>\n        {ele}\n      </Option>\n    );\n  });\n}\n"],"names":["userPool","img","FULLNAME_VALIDATION_RULE","ADDRESS_VALIDATION_RULE","LICENSE_NUMBER_VALIDATION_RULE","NUMBER_VALIDATION_RULE","YEARS_OF_EXPERIENCE_RULE","PASSWORD_VALIDATION_RULE","OTP_RULE","MOBILE_RULE","COUNTRY_CODE_RULE","createRule","ruleName","ruleValue","message","trim","length","React","FormattedMessage","id","required","pattern","validator","validationHandler","isValidNumber","value","code","parsePhoneNumberFromString","replace","isValid","e","getCountryCodeAndStrippedNumber","phoneNumber","countryCode","strippedNumber","number","countryCallingCode","nationalNumber","err","isValidNumberWithCountry","handlePhoneNumberValidation","rule","callback","Error","handlePhoneNumberValidationWithCountry","isAddressValid","requiredMsgId","invalidMsgId","isLicenseNumberValid","isNumberValid","isYearsOfExpValid","isMobileValidWithCountry","invalidMobileMsgId","type","isEmailValid","invalidEmailMsgId","isPasswordValid","invalidPasswordMsgId","isRequired","isFullNameValid","invalidFullNameMsgId","isOTPValid","rquiredMsg","invalidMsg","isMobileValid","isCountryCodeValid","invalidCountryCodeMsgId","doPasswordsMatch","getFieldValue","_rule","getValidCountryCode","cc","getValidPhoneNumber","mobile","p","substr","loadable","importFunc","fallback","LazyComponent","lazy","props","Suspense","getUserAttributes","cognitoUser","getUserPool","getCurrentUser","Promise","resolve","reject","getSession","data","signUp","email","password","fullName","phone","isBusiness","owner","attributeEmail","CognitoUserAttribute","Name","Value","attributeGroup","attributeList","push","toString","result","confirmSignUp","pool","curUser","CognitoUser","Username","Pool","error","name","confirmRegistration","resendConfirmationCode","login","authenticationDetails","AuthenticationDetails","Password","userData","authenticateUser","onSuccess","accessToken","getAccessToken","getJwtToken","refreshToken","getRefreshToken","token","idToken","jwtToken","payload","onFailure","fetchAttributes","promisify","session","attr","i","getName","getValue","signOut","username","getUsername","forgotPass","forgotPassword","confirmPassword","verificationCode","newPassword","updatePhoneNumberRequest","newPhoneNumber","getCognitoUser","then","user","updateAttributes","getAttributeVerificationCode","inputVerificationCode","verifyPhoneNumberRequest","verifyAttribute","poolData","UserPoolId","process","env","AWS_COGNITO_USER_POOL_ID","ClientId","AWS_COGNITO_USER_POOL_APP_CLIENT","CognitoUserPool","getUserPoolID","getUserPoolAppClient","COGNITO_ERROR_TYPES","USER_NOT_CONFIRMED_EXCEPTION","NOT_AUTHORIZED","INVALID_PARAMETER_EXCEPTION","CODE_MISMATCH_EXCEPTION","USER_NOT_FOUND_EXCEPTION","createImage","url","image","Image","addEventListener","setAttribute","src","getRadianAngle","degreeValue","Math","PI","getCroppedImg","imageSrc","pixelCrop","rotation","canvas","document","createElement","ctx","getContext","maxSize","max","width","height","safeArea","sqrt","translate","rotate","drawImage","getImageData","putImageData","round","x","y","toBlob","file","URL","createObjectURL","Option","NOTIFICATION_TYPE","SUCCESS","ERROR","WARNING","INFO","StyledToastIcon","styled","showNotification","notificationMethod","icon","_message","success","icSuccess","icError","warning","icWarning","info","content","getCognitoFormFields","formFields","location","_props$location","state","_props$location$state","vetData","_props$location$state2","userAttributes","forEach","convertGqlResponse","res","edges","map","a","node","filter","renderSelectOptions","options","ele","key"],"mappings":"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"}